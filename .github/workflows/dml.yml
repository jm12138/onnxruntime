# This is a basic workflow to help you get started with Actions

name: CI Build Ort DML

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2019
    
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9' ]
    name: Build Ort DML Wheel for Python ${{ matrix.python-version }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install VS 2019
        run: |
          choco install visualstudio2019community
          choco install visualstudio2019-workload-nativedesktop
          
      - name: Get specific version CMake, v3.18.4
        run: choco install cmake --version=3.18.4
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: "v1.8.1"

      # Build Ort DML Wheel for Python
      - name: Build Ort DML Wheel for Python ${{ matrix.python-version }}
        run: .\build.bat --cmake_generator "Visual Studio 16 2019" --config Release --build_wheel --use_dml --parallel --skip_tests
        
      - name: Use the Upload Artifact GitHub Action to Upload Build Files
        uses: actions/upload-artifact@v2
        with: 
          name: onnxruntime-dml-py${{ matrix.python-version }}-v1.8.1
          path: build/Windows/Release/Release/dist
